{"version":3,"sources":["components/Error.js","components/Fetching.js","lib/shapes.js","components/partials/AttributeRow.js","components/partials/Attributes.js","components/partials/FactorySelection.js","components/partials/FormFieldsForOwner.js","components/partials/Traits.js","components/framework.js","components/FactoryForm.js","components/FactoryMalfunction.js","components/icons/ExternalLinkIcon.js","components/ObjectCard.js","components/ObjectUnderConstruction.js","components/Factories.js","lib/api.js","App.js","lib/hooks.js","reportWebVitals.js","index.js"],"names":["Error","Fetching","attributesShape","PropTypes","shape","name","string","isRequired","traitsShape","attributes","arrayOf","traits","AttributeRow","props","Form","Row","Col","Label","Control","as","disabled","className","value","attribute","onChange","event","onChangeName","children","onChangeValue","Traits","useState","inputAttributes","setInputAttributes","remainingAttributeOptions","useMemo","a","b","bNames","Set","map","item","filter","has","attrDiff","attr","addAttribute","replaceAttribute","ii","replacement","newAttributes","slice","splice","Group","controlId","target","setAttributeName","setAttributeValue","length","displayName","blueprint","owner","association","factory","class_name","FactorySelection","options","label","list","autoComplete","id","FormFieldsForOwner","type","styles","StyleSheet","create","display","flexDirection","flexWrap","maxHeight","css","trait","Check","classes","classNames","x","join","buttons","justifyContent","FactoryForm","inquiry","factoryInput","setFactoryInput","blueprints","indexedBluePrints","items","func","indexed","forEach","indexBy","selectedBlueprint","validSelection","prevOwner","ref","useRef","useEffect","current","usePrevious","other","ownerType","ownerId","otherOwnerType","otherOwnerId","sameOwner","form","onSubmit","handleSubmit","Attributes","Button","variant","onClick","reset","startOver","FactoryMalfunction","message","Alert","ExternalLinkIcon","width","height","viewBox","stroke-width","stroke","fill","stroke-linecap","stroke-linejoin","points","d","active","boxShadow","object","border","borderRadius","padding","marginRight","position","cursor","transition","objectDetails","flex","objectTitle","borderBottom","marginBottom","ObjectCard","isNew","isActive","animationClass","new","activate","link","href","rel","Object","entries","ObjectUnderConstruction","overflow","objectList","margin","Factories","factories","constructing","setConstructing","error","setError","fetching","setFetching","newObjectIndex","setNewObjectIndex","objects","setObjects","selectedObjectIndex","setSelectedObjectIndex","factoryList","selectedObject","associationFactories","association_factories","find","f","factory_name","association_name","findAssociationFactory","data","url","submitPath","fetch","method","body","response","json","responseData","ok","handleResponseData","console","JSON","stringify","handleSubmitError","log","concat","handleObject","selectObject","preventDefault","submit","FormData","index","then","res","App","loadFn","dependencies","setResponse","asyncFetch","done","catch","useRemoteData","api","class","csrfToken","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.773e8c14.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Error() {\n  return (\n    <div>86 on that ... something went wrong.</div>\n  );\n}\n\nexport default Error;\n","import React from \"react\";\n\nfunction Fetching() {\n  return (\n    <div>Coming right up...</div>\n  );\n}\n\nexport default Fetching;\n","import PropTypes from 'prop-types';\n\nconst attributesShape = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n});\n\nconst traitsShape = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n});\n\nconst factoryShape = PropTypes.shape({\n  attributes: PropTypes.arrayOf(attributesShape),\n  name: PropTypes.string.isRequired,\n  traits: PropTypes.arrayOf(traitsShape),\n});\n\nexport {\n  attributesShape,\n  factoryShape,\n  traitsShape,\n};\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\n\nfunction AttributeRow(props) {\n  return (\n    <Form.Row>\n      <Col>\n        <Form.Label>Attribute Name</Form.Label>\n        <Form.Control\n          as=\"select\"\n          disabled={props.disabled}\n          name={`attributes[][name]`}\n          className=\"form-control\"\n          value={props.attribute.name}\n          onChange={event => props.onChangeName(event)}\n        >\n          <option value={props.attribute.name}>{props.attribute.name}</option>\n          {props.children}\n        </Form.Control>\n      </Col>\n      <Col>\n        <Form.Label>Value</Form.Label>\n        <input\n          disabled={props.disabled || !props.attribute.name}\n          name={`attributes[][value]`}\n          className=\"form-control\"\n          value={props.attribute.value}\n          onChange={event => props.onChangeValue(event)}\n        />\n      </Col>\n    </Form.Row>\n  );\n}\n\nAttributeRow.propTypes = {\n  attribute: PropTypes.shape({\n    name: PropTypes.string,\n    value: PropTypes.string,\n  }),\n  children: PropTypes.node,\n  disabled: PropTypes.bool,\n  onChangeName: PropTypes.func.isRequired,\n  onChangeValue: PropTypes.func.isRequired,\n};\n\nexport default AttributeRow;\n","import React, { useMemo, useState } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport AttributeRow from \"./AttributeRow\";\n\nimport { attributesShape } from \"lib/shapes\";\n\nfunction attrDiff(a, b) {\n  const bNames = new Set(b.map(item => item.name));\n  return a.filter(item => !bNames.has(item.name));\n}\n\nfunction Traits(props) {\n  const { attributes } = props;\n\n  const [inputAttributes, setInputAttributes] = useState([]);\n  const remainingAttributes = useMemo(() => attrDiff(attributes, inputAttributes), [attributes, inputAttributes]);\n\n  const remainingAttributeOptions = remainingAttributes.map(attr => (\n    <option key={attr.name} value={attr.name}>{attr.name}</option>\n  ));\n\n  function addAttribute({name, value}) {\n    setInputAttributes([...inputAttributes, {name, value}]);\n  }\n\n  function setAttributeName(ii, event) {\n    const replacement = {name: event.target.value, value: inputAttributes[ii].value};\n    replaceAttribute(ii, replacement);\n  }\n\n  function setAttributeValue(ii, event) {\n    const replacement = {name: inputAttributes[ii].name, value: event.target.value};\n    replaceAttribute(ii, replacement);\n  }\n\n  function replaceAttribute(ii, replacement) {\n    const newAttributes = inputAttributes.slice();\n    newAttributes.splice(ii, 1, replacement);\n    setInputAttributes(newAttributes);\n  }\n\n  return (\n    <Form.Group controlId=\"factories.Traits\">\n      <Form.Label>Pickles or onions?</Form.Label>\n\n      {inputAttributes.map((attr, ii) => (\n        <AttributeRow\n          key={ii}\n          attribute={attr}\n          disabled={props.disabled}\n          onChangeName={event => setAttributeName(ii, event)}\n          onChangeValue={event => setAttributeValue(ii, event)}\n        >\n          {remainingAttributeOptions}\n        </AttributeRow>\n      ))}\n\n      <AttributeRow\n        key={inputAttributes.length + 1}\n        attribute={{name: \"\", value: \"\"}}\n        disabled={props.disabled}\n        onChangeName={event => addAttribute({name: event.target.value, value: \"\"})}\n        onChangeValue={event => addAttribute({name: \"\", value: event.target.value})}\n      >\n        {remainingAttributeOptions}\n      </AttributeRow>\n\n    </Form.Group>\n  );\n}\n\nTraits.propTypes = {\n  disabled: PropTypes.bool,\n  attributes: PropTypes.arrayOf(attributesShape).isRequired,\n};\n\nexport default Traits;\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport { factoryShape } from \"lib/shapes\";\n\nfunction displayName(blueprint, owner) {\n  if (owner) {\n    return `${blueprint.association} (${blueprint.factory.name}, ${blueprint.factory.class_name})`;\n  } else {\n    return `${blueprint.factory.name} (${blueprint.factory.class_name})` ;\n  }\n}\n\nfunction FactorySelection(props) {\n  const { options, label, value, onChange, owner } = props;\n  return (\n    <Form.Group controlId=\"factories.FactorySelect\">\n      <Form.Label>{label}</Form.Label>\n      <input\n        name=\"factory\"\n        list=\"factories\"\n        autoComplete=\"off\"\n        className=\"form-control\"\n        value={value}\n        onChange={onChange}\n      />\n      <datalist id=\"factories\">\n        {options.map(blueprint => (\n          <option key={displayName(blueprint, owner)} value={blueprint.factory.name}>\n            {displayName(blueprint, owner)}\n          </option>\n        ))}\n      </datalist>\n    </Form.Group>\n  );\n}\n\nFactorySelection.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      factory: factoryShape.isRequired,\n      association: PropTypes.string,\n    })\n  ).isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  label: PropTypes.string,\n  owner: PropTypes.shape({\n    type: PropTypes.string,\n    id: PropTypes.any,\n  }),\n};\n\nexport default FactorySelection;\n","import React from \"react\";\n\nimport PropTypes from 'prop-types';\n\nimport Form from \"react-bootstrap/Form\";\n\nfunction FormFieldsForOwner(props) {\n  const { association, owner } = props;\n\n  return (\n    <>\n      <Form.Group controlId=\"factories.OwnerType\">\n        <Form.Control\n          type=\"hidden\"\n          value={(owner && owner.type) || \"\"}\n          name=\"owner_type\"\n        />\n      </Form.Group>\n      <Form.Group controlId=\"factories.OwnerId\">\n        <Form.Control\n          type=\"hidden\"\n          value={(owner && owner.id) || \"\"}\n          name=\"owner_id\"\n        />\n      </Form.Group>\n      <Form.Group controlId=\"factories.OwnerReflection\">\n        <Form.Control\n          type=\"hidden\"\n          value={association || \"\"}\n          name=\"owner_association\"\n        />\n      </Form.Group>\n    </>\n  );\n}\n\nFormFieldsForOwner.propTypes = {\n  association: PropTypes.string,\n  owner: PropTypes.shape({\n    type: PropTypes.string,\n    id: PropTypes.any,\n  }),\n};\n\nexport default FormFieldsForOwner;\n","import React from \"react\";\n\nimport { StyleSheet, css } from \"aphrodite\";\nimport PropTypes from \"prop-types\";\n\nimport Form from \"react-bootstrap/Form\";\n\nimport { traitsShape } from \"lib/shapes\";\n\nfunction Traits(props) {\n  const { traits } = props;\n\n  return (\n    <Form.Group controlId=\"factories.Traits\">\n      <Form.Label>How would you like that cooked?</Form.Label>\n      <div className={css(styles.traits)}>\n        {traits.map(trait => (\n          <Form.Check\n            key={trait.name}\n            type=\"checkbox\"\n            disabled={props.disabled}\n            id={trait.name}\n            name={`traits[${trait.name}]`}\n            label={trait.name}\n          />\n        ))}\n      </div>\n    </Form.Group>\n  );\n}\n\nTraits.propTypes = {\n  disabled: PropTypes.bool,\n  traits: PropTypes.arrayOf(traitsShape).isRequired,\n};\n\nconst styles = StyleSheet.create({\n  traits: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexWrap: \"wrap\",\n    maxHeight: \"6em\",\n  },\n});\n\nexport default Traits;\n","import { useEffect, useRef } from \"react\";\n\nexport function classes(...classNames) {\n  return classNames.filter(x => x).join(\" \");\n}\n\nexport function indexBy(items, func) {\n  const indexed = {};\n  items.forEach(item => indexed[func(item)] = item);\n  return indexed;\n}\n\nexport function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n","import React, { useEffect, useMemo, useState, useRef } from 'react';\n\nimport { css, StyleSheet } from 'aphrodite';\nimport PropTypes from 'prop-types';\n\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n\nimport Attributes from \"./partials/Attributes\";\nimport FactorySelection from \"./partials/FactorySelection\";\nimport FormFieldsForOwner from \"./partials/FormFieldsForOwner\";\nimport Traits from \"./partials/Traits\";\n\nimport { factoryShape } from \"lib/shapes\";\nimport { indexBy, usePrevious } from \"./framework\";\n\nfunction FactoryForm(props) {\n  const owner = props.owner;\n  const inquiry = props.inquiry || \"What'll it be?\";\n\n  const [factoryInput, setFactoryInput] = useState(\"\");\n\n  function handleFactory(event) {\n    const value = event.target.value;\n    setFactoryInput(value);\n  }\n\n  const blueprints = useMemo(() => props.blueprints || [], [props.blueprints]);\n  const indexedBluePrints = useMemo(() => indexBy(blueprints, blueprint => blueprint.factory.name), [blueprints]);\n  const selectedBlueprint = useMemo(() => indexedBluePrints[factoryInput], [factoryInput, indexedBluePrints]);\n  const attributes = useMemo(() => (selectedBlueprint && selectedBlueprint.factory.attributes) || [], [selectedBlueprint]);\n  const traits = useMemo(() => (selectedBlueprint && selectedBlueprint.factory.traits) || [], [selectedBlueprint]);\n  const validSelection = !!selectedBlueprint;\n\n  const prevOwner = usePrevious(props.owner);\n\n  function sameOwner(owner, other) {\n    const ownerType = owner && owner.type;\n    const ownerId = owner && owner.id;\n    const otherOwnerType = other && other.type;\n    const otherOwnerId = other && other.id;\n    return ownerType === otherOwnerType && ownerId === otherOwnerId;\n  }\n\n  useEffect(() => {\n    if (!sameOwner(props.owner, prevOwner)) { setFactoryInput(\"\"); }\n  }, [props.owner, prevOwner]);\n\n  const form = useRef(null);\n\n  function startOver() {\n    form.current && form.current.reset();\n    setFactoryInput(\"\");\n    props.startOver();\n  }\n\n  return (\n    <Form ref={form} onSubmit={props.handleSubmit}>\n\n      <FactorySelection\n        options={blueprints}\n        label={inquiry}\n        value={factoryInput}\n        onChange={handleFactory}\n        owner={owner}\n      />\n\n      <FormFieldsForOwner owner={owner} association={selectedBlueprint && selectedBlueprint.association} />\n\n      {traits.length > 0 && (\n        <Traits disabled={props.disabled} traits={traits} />\n      )}\n\n      {attributes.length > 0 && (\n        <Attributes disabled={props.disabled} attributes={attributes} />\n      )}\n\n      <div className={css(styles.buttons)}>\n        <Button variant=\"outline-dark\" className=\"btn-primary\" disabled={props.disabled || !validSelection} type=\"submit\">\n          Gimme!\n        </Button>\n        <Button variant=\"outline-dark\" className=\"btn-danger\" disabled={props.disabled} onClick={startOver} type=\"button\">\n          Start Over\n        </Button>{' '}\n      </div>\n    </Form>\n  );\n}\n\nFactoryForm.propTypes = {\n  blueprints: PropTypes.arrayOf(\n    PropTypes.shape({\n      factory: factoryShape.isRequired,\n      association: PropTypes.string,\n    })\n  ).isRequired,\n  disabled: PropTypes.bool,\n  handleSubmit: PropTypes.func,\n  inquiry: PropTypes.string,\n  owner: PropTypes.shape({\n    type: PropTypes.string,\n    id: PropTypes.any,\n  }),\n  startOver: PropTypes.func,\n};\n\nconst styles = StyleSheet.create({\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n});\n\nexport default FactoryForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Alert from \"react-bootstrap/Alert\";\n\nfunction FactoryMalfunction(props) {\n  const message = props.message || \"Something went wrong\";\n  return (\n    <Alert variant=\"danger\">\n      {message}\n    </Alert>\n  );\n}\n\nFactoryMalfunction.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default FactoryMalfunction;\n","import React from \"react\";\n\nfunction ExternalLinkIcon() {\n  return (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\">\n      <g stroke-width=\"2.1\" stroke=\"#666\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n        <polyline points=\"17 13.5 17 19.5 5 19.5 5 7.5 11 7.5\"></polyline>\n        <path d=\"M14,4.5 L20,4.5 L20,10.5 M20,4.5 L11,13.5\"></path>\n      </g>\n    </svg>\n  )\n}\n\nexport default ExternalLinkIcon;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { StyleSheet, css } from \"aphrodite\";\n\nimport ExternalLinkIcon from \"./icons/ExternalLinkIcon\";\n\nimport { classes } from \"./framework\";\n\nfunction animationClass({ isNew, isActive }) {\n  if (isNew) {\n    return \"created\";\n  } else if (isActive) {\n    return \"selected\";\n  } else {\n    return null;\n  }\n}\n\nfunction ObjectCard(props) {\n  const { object = {} } = props;\n  const attributes = object.attributes || {};\n  const className = animationClass({isNew: props.new, isActive: props.active});\n  return (\n    <div className={classes(css(styles.object, props.active && styles.active), className, \"background-mayo hoverable\")} onClick={props.activate}>\n      <div className={css(styles.objectTitle)}>\n        {object.type}\n        {object.link && (\n          <a href={object.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"ml-1\">\n            <ExternalLinkIcon />\n          </a>\n        )}\n      </div>\n      <div className={css(styles.objectDetails)}>\n        {Object.entries(attributes).map(([name, value]) => (\n          <div key={name}>\n            {`${name}: ${value}`}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nObjectCard.propTypes = {\n  activate: PropTypes.func.isRequired,\n  active: PropTypes.bool,\n  new: PropTypes.bool,\n  object: PropTypes.shape({\n    attributes: PropTypes.object.isRequired,\n    type: PropTypes.string.isRequired,\n    link: PropTypes.string,\n  }).isRequired,\n};\n\nconst styles = StyleSheet.create({\n  active: {\n    boxShadow: \"5px 5px 0px #333\",\n  },\n  object: {\n    border: \"2px solid #222\",\n    borderRadius: \"1em\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: \"0.5em\",\n    marginRight: \"0.5em\",\n    position: \"relative\",\n    cursor: \"pointer\",\n    transition: \"background-color 0.2s\",\n  },\n  objectDetails: {\n    flex: 1,\n    width: \"100%\",\n  },\n  objectTitle: {\n    flex: 0,\n    width: \"100%\",\n    borderBottom: \"2px solid #222\",\n    marginBottom: \"3px\",\n  },\n});\n\nexport default ObjectCard;\n","import React from \"react\";\n\nimport ObjectCard from \"./ObjectCard\";\n\nfunction ObjectUnderConstruction() {\n  return (\n    <div className=\"under-construction\">\n      <ObjectCard\n        object={{type: \"building...\"}}\n      />\n    </div>\n  );\n}\n\nexport default ObjectUnderConstruction;\n","import React, { useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { StyleSheet, css } from \"aphrodite\";\n\nimport { factoryShape } from \"lib/shapes\";\n\nimport FactoryForm from \"./FactoryForm\";\nimport FactoryMalfunction from \"./FactoryMalfunction\";\nimport ObjectCard from \"./ObjectCard\";\nimport ObjectUnderConstruction from \"./ObjectUnderConstruction.js\";\n\nfunction findAssociationFactory(factories, association) {\n  return {\n    factory: factories.find(f => f.name === association.factory_name),\n    association: association.association_name,\n  };\n}\n\nfunction objectId(object) {\n  return {\n    type: object.type,\n    id: object.attributes.id,\n  };\n}\n\nfunction Factories(props) {\n  const { factories } = props;\n\n  // Just use this for testing objects without having to create them\n  // const staticObject = [{type: \"test\", attributes: {id: 1, name: \"first\"}}, {type: \"test\", attributes: {id: 1, name: \"second\"}}];\n  const staticObject = [];\n\n  const [constructing, setConstructing] = useState(false);\n  const [error, setError] = useState(null);\n  const [fetching, setFetching] = useState(false);\n  const [newObjectIndex, setNewObjectIndex] = useState(null);\n  const [objects, setObjects] = useState([...staticObject]);\n  const [selectedObjectIndex, setSelectedObjectIndex] = useState(null);\n\n  const factoryList = factories.map(factory => ({factory}));\n  const selectedObject = selectedObjectIndex !== null && objects.length > 0 && objects[selectedObjectIndex];\n\n  const associationFactories = useMemo(() => {\n    if (!selectedObject || !selectedObject.association_factories) { return []; }\n    const matchingFactories = selectedObject.association_factories.map(\n      item => findAssociationFactory(factories, item)\n    );\n    return matchingFactories;\n  }, [factories, selectedObject]);\n\n  const blueprints = selectedObject ? associationFactories : factoryList;\n  const inquiry = selectedObject ? `Would you like fries with that ${selectedObject.type}?` : null;\n\n  function startOver() {\n    setNewObjectIndex(null);\n    setNewObjectIndex(null);\n    setObjects([]);\n    setSelectedObjectIndex(null);\n  }\n\n  function selectObject(ii) {\n    setNewObjectIndex(null);\n    setSelectedObjectIndex(ii);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setConstructing(true);\n    setError(null);\n    setFetching(true);\n    const data = formData(event.target);\n    submit(data);\n  }\n\n  async function submit(data) {\n    const url = props.submitPath;\n\n    const response = await fetch(url, {\n      method: \"POST\",\n      body: data,\n    });\n\n    const responseData = await response.json();\n\n    if (!response.ok) {\n      // eslint-disable-next-line no-console\n      console.error(JSON.stringify(responseData));\n      handleSubmitError(responseData.error || \"Uh oh, something broke.\");\n    } else {\n      handleResponseData(responseData);\n    }\n  }\n\n  function handleResponseData(responseData) {\n    if (responseData.ok) {\n      // eslint-disable-next-line no-console\n      console.log(JSON.stringify(responseData));\n      handleObject(responseData.data);\n    } else {\n      // eslint-disable-next-line no-console\n      console.error(responseData.error);\n      handleSubmitError(responseData.error || \"Uh oh, something went wrong.\");\n    }\n  }\n\n  function handleSubmitError(message) {\n    setConstructing(false);\n    setError(message);\n    setFetching(false);\n  }\n\n  function handleObject(object) {\n    setConstructing(false);\n    setError(null);\n    setFetching(false);\n    setObjects(objects.slice().concat([object]));\n    if (objects.length === 0) {\n      setSelectedObjectIndex(0);\n    }\n    setNewObjectIndex(objects.length);\n  }\n\n  function formData(form) {\n    return new FormData(form);\n  }\n\n  return (\n    <div className=\"container\">\n      <h2>Order Up!</h2>\n\n      {(constructing || (objects.length > 0)) && (\n        <>\n          {constructing ? \"Comin' right up!\" : \"Here you go!\"}\n          {objects.length > 1 && (\n            <span>{\" \"}P.S. -- select any object to build out its dependencies.</span>\n          )}\n          <div className={css(styles.objectList)}>\n            {objects.map((object, ii) => (\n              <ObjectCard\n                key={ii}\n                object={object}\n                active={selectedObjectIndex === ii}\n                activate={() => selectObject(ii)}\n                new={newObjectIndex === ii}\n              />\n            ))}\n            {constructing && <ObjectUnderConstruction />}\n          </div>\n        </>\n      )}\n\n      {error && <FactoryMalfunction message={error} />}\n\n      <div className={css(styles.form)}>\n        <FactoryForm\n          owner={selectedObject ? objectId(selectedObject) : null}\n          blueprints={blueprints}\n          disabled={fetching}\n          handleSubmit={handleSubmit}\n          startOver={startOver}\n          inquiry={inquiry}\n        />\n      </div>\n    </div>\n  );\n}\n\nFactories.propTypes = {\n  factories: PropTypes.arrayOf(factoryShape),\n  submitPath: PropTypes.string,\n};\n\nconst styles = StyleSheet.create({\n  form: {\n    marginBottom: \"2em\",\n    transition: \"opacity 0.5s ease-out\",\n    overflow: \"hidden\",\n  },\n  objectList: {\n    display: \"flex\",\n    margin: \"0.5em 0 1em\",\n  },\n});\n\nexport default Factories;\n","export function index() {\n  return fetch(\"./data\")\n    .then(res => res.json());\n}\n","import { useEffect } from \"react\";\n\nimport './App.css';\nimport './burgers.css';\nimport './layout.css';\n\nimport Error from \"components/Error\";\nimport Fetching from \"components/Fetching\";\nimport Factories from \"components/Factories\";\n\nimport * as api from \"lib/api\";\nimport { useRemoteData } from \"lib/hooks\";\n\nfunction App() {\n  const factories = useRemoteData(api.index);\n\n  useEffect(() => { console.log(factories) }, [factories]);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <div class=\"header-text\">testing</div>\n      </header>\n      <main>\n        {factories.fetching && <Fetching />}\n        {factories.error && <Error />}\n        {factories.response && (\n          <Factories\n            csrfToken=\"\"\n            submitPath=\"./build\"\n            factories={factories.response}\n          />\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// useRemoteData -- fetch remote data with standardized fetching and error states\n//\n// USAGE\n//\n// function fetchMyData() {\n//  // ... return your data or a promise for your data ...\n// }\n//\n// const data = useRemoteData(fetchMyData);\n//   // -- OR --\n// const data = useRemoteData(fetchMyData, dependencies);\n//\n// Similar to `useEffect`, `dependencies` will trigger the fetch to occur again.\n// `dependencies` defaults to [], meaning the fetch will happen only once.\n\n\nimport { useEffect, useMemo, useState } from \"react\";\nexport function useRemoteData(loadFn, dependencies = []) {\n  const [error, setError] = useState(null);\n  const [fetching, setFetching] = useState(dependencies.length === 0);\n  const [response, setResponse] = useState(null);\n\n  useEffect(() => {\n    setFetching(true);\n    asyncFetch().then(setResponse).catch(setError).then(done);\n  }, dependencies); // eslint-disable-line react-hooks/exhaustive-deps\n\n  async function asyncFetch() {\n    return loadFn();\n  }\n\n  function done() {\n    setFetching(false);\n  }\n\n  const value = useMemo(() => {\n    return {error, fetching, response};\n  }, [error, fetching, response]);\n\n  return value;\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}